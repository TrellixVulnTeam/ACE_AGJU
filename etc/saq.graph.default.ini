[config]
graph_local = etc/saq.graph.ini

[msal]
token_cache_path = var/msal_token_cache.bin

[module_group_correlation]
analysis_module_graph_upn_analyzer = yes
analysis_module_signin_history_analyzer = yes

[analysis_module_graph_upn_analyzer]
enabled = yes
module = saq.modules.user
class = UserPrincipleNameAnalyzer
; Required: Specify an existing observable type to treat like a uPn.
;  Often organizations use email addresses.
upn_pointer = email_address
; if true, get the profile photo for the user so it can be
; loaded with the analysis in the GUI.
get_profile_photo = yes
; If get_profile_photo is true, download this size photo
; The supported sizes of HD photos on Microsoft 365 are as follows:
;   48x48, 64x64, 96x96, 120x120, 240x240, 360x360, 432x432, 504x504, and 648x648
profile_photo_size = 240x240

[analysis_module_signin_history_analyzer]
enabled = yes
module = saq.modules.user
class = UserSignInHistoryAnalyzer
; Required: Specify an existing observable type to treat like a uPn.
;  Often organizations use email addresses.
upn_pointer = email_address
; How far back to query for the user's sign in activity
day_interval = 14

; WE NEED TO ADD A GRAPH COLLECTOR HERE!!!


; Graph API remediation account example

;[remediation_account_email_unique_name]
;type = graph
;tenant_id = uuid_from_o365
;authority_base_url = https://login.microsoftonline.com
;client_id = uuid_also_known_as_app_id
;scopes = https://graph.microsoft.com/.default
;thumbprint = certificate_thumbprint_as_defined_in_your_azure_ad_app
;private_key_file = path/to/private/key/file
; -- NOTE: If a client_credential (client secret) is supplied it will be used instead of
;    a supplied certificate when authenticating for tokens
;client_credential = encrypted:key_to_application_password_goes_here

; -- make sure the slash at the end of the endpoint is present or it can cause some weird
;    behavior
;endpoint = https://graph.microsoft.com/v1.0/users/

; -- Restrict this remediation account to a specific company, leave out of your config
; -- unless you know you need it.
;company_id =

; -- CA Cert --ex: if your requests are subject to SSL decryption.
;    These are separated as the auth endpoint is different than the
;    graph endpoint. Leave these items out of the config to verify
;    certs normally.
;auth_ca_cert_path = path/to/ca/cert/to/use/for/verification
;graph_ca_cert_path = path/to/ca/cert/to/use

# Graph Collector Example Config

; [service_o365_security_collector] 
; class = o365_Security_Collector
; type = graph
; queue = internal
; module = saq.collectors.o365
; enabled = yes
; tenant_id = 
; client_id = 
; thumbprint = 
; private_key = ssl/graph/o365sec.crt
; graph_base_uri = https://graph.microsoft.com/v1.0/
; graph_beta_uri = https://graph.microsoft.com/beta/
; endpoint = https://graph.microsoft.com/v1.0/
; auth_ca_cert_path = 

; [observable_mapping] #This defines the keys used to extract observables from an alert and their typing
; userPrincipalName = email_address
; domainName = hostname
; logonIp = ipv4

# Below is a listing off all alerts to be collected. They can be enabled or disabled, set correlation mode (default is correlation), and new ones can be added easily
; [o365_alert_Set_host_site] # To add a new rule, convert all spaces and special characters in the rule name to '_' and prefix with 'o365_alert_'
; queue = external
; enabled = True
; correlation_mode = correlation
; rule_name = Set_host_site